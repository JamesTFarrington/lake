#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

(defun init-clakefile ()
  (handler-case
      (with-open-file (out "Clakefile" :direction :output
                                       :if-exists :error
                                       :if-does-not-exist :create)
        (write-line "#|-*- mode:lisp -*-|#" out)
        (write-line "(in-package :cl-user)" out)
        (write-line "(defpackage :clake.user" out)
        (write-line "  (:use :cl :clake :cl-syntax)" out)
        (write-line "  (:shadowing-import-from :clake" out)
        (write-line "                          :directory))" out)
        (write-line "(in-package :clake.user)" out)
        (write-line "" out)
        (write-line "(use-syntax :interpol)" out)
        (write-line "" out)
        (write-line "(task \"default\" ())" out)
        (write-line "" out)
        (write-line ";;; here follow your tasks..." out))
    (error (e)
      (format t "~A~%" e)
      (ros:quit -1))))

(defun print-help ()
  (write-line "Usage: clake-tools [commmand]")
  (write-line "Commands:")
  (write-line "  init          Create an empty Clakefile with boilerplates")
  (write-line "                in current directory."))

(defun main (&optional $1 &rest argv)
  (declare (ignorable argv))
  (cond ((string= "init" $1)
         (init-clakefile))
        (t (print-help)
           (ros:quit 1))))
